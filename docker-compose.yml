services:
  frontend:
    build: 
      context: ./frontend
      args:
        - VITE_API_BASE_URL=/api
    ports:
      - "10000:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    expose:
      - "5200"
    environment:
      - PYTHONUNBUFFERED=1
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL_NAME=${GEMINI_MODEL_NAME}
      # PostgreSQL接続用の環境変数
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-appdb}
      # APIキー暗号化用の秘密鍵
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-changeme_in_production_a_very_strong_secret_key_32_bytes}
    volumes:
      - ./backend:/app
    # Playwrightの設定
    security_opt: 
      - seccomp=unconfined
    cap_add:
      - SYS_ADMIN
    shm_size: "2gb"  # ブラウザ用の共有メモリサイズを増やす
    entrypoint: ["/usr/local/bin/startup.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 5200 --reload
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ポート公開（必要な場合のみ有効化）
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-appdb} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # MCPサーバーを実行するためのサービス
  mcp:
    build:
      context: ./mcp
      dockerfile: Dockerfile
      # Pass the list of repositories as a build argument
      args:
        # Replace with your actual repository URLs, space-separated
        - MCP_REPOS=https://github.com/yo-ban/url-image-mcp.git
    container_name: mcp-server-container
    # Expose expected ports if needed for host access or documentation
    expose:
      - "3001" # Adjust based on your servers' ports
      # - "3002"
    # Remove volume mount for server code - it's built into the image now
    # volumes:
    #   - ./mcp-servers:/mcp-servers
    environment:
      # Pass environment variables needed by ANY of the MCP servers
      - PORT_SERVER_1=3001 # Example: If servers need specific ports
      # - PORT_SERVER_2=3002
      # - EXAMPLE_API_KEY=${EXAMPLE_API_KEY}
      # - ANOTHER_CONFIG=${ANOTHER_CONFIG}
      - NODE_ENV=production # Often useful for Node apps
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    networks:
      - app-network
    # Add restart policy if desired
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: